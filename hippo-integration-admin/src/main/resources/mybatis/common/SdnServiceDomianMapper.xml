<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.change.hippo.admin.mapper.SdnServiceDomianMapper">
    <resultMap id="BaseResultMap" type="com.change.hippo.admin.entity.SdnServiceDomianEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="domain" jdbcType="VARCHAR" property="domain"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, domain, name, status, create_by, update_by, create_time, update_time
  </sql>
    <select id="get" parameterType="java.lang.Long" resultType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
        select
        <include refid="Base_Column_List"/>
        from sdn_service_domian
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="list" resultType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
        select
        <include refid="Base_Column_List"/>
        from sdn_service_domian
        <where>
            status = 1
            <if test="name != null and name != ''">
                and ( domain like "%"#{name}"%" or name like "%"#{name}"%")
            </if>
        </where>
        <choose>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from sdn_service_domian
        <where>
            status = 1
            <if test="name != null and name != ''">
                and ( domain like "%"#{name}"%" or name like "%"#{name}"%")
            </if>
        </where>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sdn_service_domian
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="batchRemove">
        delete from sdn_service_domian where id in
        <foreach item="id" collection="array" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
    insert into sdn_service_domian (id, domain, name, 
      status, create_by, update_by, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{domain,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
        insert into sdn_service_domian
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="domain != null">
                domain,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="domain != null">
                #{domain,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
        update sdn_service_domian
        <set>
            <if test="domain != null">
                domain = #{domain,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.change.hippo.admin.entity.SdnServiceDomianEntity">
    update sdn_service_domian
    set domain = #{domain,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>